/*

SASS COMMAND:
sass --watch temp/src/temp.scss:temp/css/temp.css

*/
html, body {
  margin: 0;
  width: 100%;
  height: 100%;
}

@font-face {
  font-family: "BRAVE Eightyone Regular";
  src: url(fonts/BraveEightyoneRegular-ZVGvm.ttf) format("truetype");
}
.content {
  padding: 10px;
  /* 
  	"border-box" includes padding when calculating size, 
  	so the columns won't wrap unexpectedly
  */
  box-sizing: border-box;
  width: 100%;
  height: 100%;
}

.content > div {
  padding: 10px;
}

#hammerhead {
  width: 100%;
}

.row {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
}

/*
	CHANGE: the percent value for $size is now calculated in the
	flex item definition. Also added 15 for sidebars, and 70
	for main-content container.
*/
.col-15 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 15%;
}

.col-20 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 20%;
}

.col-25 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 25%;
}

.col-33 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 33%;
}

.col-40 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 40%;
}

.col-50 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 50%;
}

.col-60 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 60%;
}

.col-66 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 66%;
}

.col-70 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 70%;
}

.col-75 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 75%;
}

.col-80 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 80%;
}

.col-100 {
  /*
  "flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
  We don't need the flex items to grow to fill the container, or shrink to fit inside it.
  The columns are a fixed percentage of the container width.
  */
  flex: 0 0 100%;
}

/* ============== SMALL SCREENS ================== */
@media only screen and (max-width: 1025px) {
  #org-title {
    font-family: BRAVE Eightyone Regular;
    font-size: 20px;
  }
  #header.content {
    background-image: url("webp/mobile/mblHDR.webp");
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }
  #main-content {
    background-image: url("webp/mobile/mblMC.webp");
    background-size: 100% 100%;
    background-position: center;
  } /*

the footer for mobile devices will probably be different than
the image i've been using for the desktop footer. it
will probably be taller.

*/
}
/* ================ MEDIUM SCREENS ================== */
@media only screen and (min-width: 1026px) and (max-width: 2559px) {
  .col-md-15 {
    flex: 0 0 15%;
  }
  .col-md-20 {
    flex: 0 0 20%;
  }
  .col-md-25 {
    flex: 0 0 25%;
  }
  .col-md-33 {
    flex: 0 0 33%;
  }
  .col-md-40 {
    flex: 0 0 40%;
  }
  .col-md-50 {
    flex: 0 0 50%;
  }
  .col-md-60 {
    flex: 0 0 60%;
  }
  .col-md-66 {
    flex: 0 0 66%;
  }
  .col-md-70 {
    flex: 0 0 70%;
  }
  .col-md-75 {
    flex: 0 0 75%;
  }
  .col-md-80 {
    flex: 0 0 80%;
  }
  .col-md-100 {
    flex: 0 0 100%;
  }
  #org-title {
    font-family: BRAVE Eightyone Regular;
    font-size: 24px;
  }
  #header.content {
    background-image: url("webp/1080p/1080HDR.webp");
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    height: 124px;
  }
  #main-content {
    background-image: url("webp/1080p/1080MC.webp");
    background-size: 100% 100%;
    background-position: center;
    height: 913px;
  }
  #footer.content {
    background-image: url("webp/1080p/1080FTR.webp");
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    height: 43px;
  }
}
@media only screen and (min-width: 2560px) {
  body {
    font-size: 32px;
  }
  #org-title {
    font-family: BRAVE Eightyone Regular;
    font-size: 48px;
  }
  .col-lg-15 {
    flex: 0 0 15%;
  }
  .col-lg-20 {
    flex: 0 0 20%;
  }
  .col-lg-25 {
    flex: 0 0 25%;
  }
  .col-lg-33 {
    flex: 0 0 33%;
  }
  .col-lg-40 {
    flex: 0 0 40%;
  }
  .col-lg-50 {
    flex: 0 0 50%;
  }
  .col-lg-60 {
    flex: 0 0 60%;
  }
  .col-lg-66 {
    flex: 0 0 66%;
  }
  .col-lg-70 {
    flex: 0 0 70%;
  }
  .col-lg-75 {
    flex: 0 0 75%;
  }
  .col-lg-80 {
    flex: 0 0 80%;
  }
  .col-lg-100 {
    flex: 0 0 100%;
  }
  #header.content {
    background-image: url("webp/4K/4kHDR.webp");
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    height: 248px;
  }
  #main-content {
    background-image: url("webp/4K/4kMC.webp");
    background-size: 100% 100%;
    background-position: center;
    width: 100%;
    height: 1826px;
  }
  #footer.content {
    background-image: url("webp/4K/4kFTR.webp");
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    height: 86px;
  }
}
/* =============== Boxes / blocks / widgets =============== */
/*
 Currently working on a javascript solution to change
 the background image for the boxes based on device width. Could
 just put the mixins in each media query with different file paths,
 but I don't wanna pollute the css further. 
*/
.box-1 {
  background-image: url("webp/1080p/Button 1 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 12.5em;
  box-sizing: border-box;
}

.box-2 {
  background-image: url("webp/1080p/Button 2 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 7em;
  box-sizing: border-box;
}

.box-3 {
  background-image: url("webp/1080p/Button 3 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 12.5em;
  box-sizing: border-box;
}

.box-4 {
  background-image: url("webp/1080p/Button 4 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 5em;
  box-sizing: border-box;
}

.box-5 {
  background-image: url("webp/1080p/Button 6 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 12.5em;
  box-sizing: border-box;
}

.box-6 {
  background-image: url("webp/1080p/Button 7 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 12.5em;
  box-sizing: border-box;
}

.box-7 {
  background-image: url("webp/1080p/Button 8 1080.webp");
  background-size: 100% 100%;
  width: 100%;
  height: 26em;
  box-sizing: border-box;
}

/*# sourceMappingURL=temp.css.map */
