/*

SASS COMMAND:
sass --watch temp/src/temp.scss:temp/css/temp.css

*/
html, body
{
	margin: 0;
	width: 100%;
	height: 100%;
}

@font-face
{
	font-family: 'BRAVE Eightyone Regular';
	src: url(fonts/BraveEightyoneRegular-ZVGvm.ttf) format('truetype')
}

.content
{
	// Spacing between flex-items
	padding: 10px;
	/* 
		"border-box" includes padding when calculating size, 
		so the columns won't wrap unexpectedly
	*/
	box-sizing: border-box;
	width: 100%;
	height: 100%;
}

.content > div
{
	// Spaces text away from box edges
	padding: 10px;
}

#hammerhead
{
	width: 100%;
}

// For flex containers
.row
{
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
}

/*
	CHANGE: the percent value for $size is now calculated in the
	flex item definition. Also added 15 for sidebars, and 70
	for main-content container.
*/
// Widths for flex columns
$sizes: (15, 20, 25, 33, 40, 50, 60, 66, 70, 75, 80, 100);

// Flex item definitions (default / small screens)  
@each $size in $sizes
{
	.col-#{$size}
	{
	/*
	"flex" is shorthand for flex-grow, flex-shrink, and flex-basis.
	We don't need the flex items to grow to fill the container, or shrink to fit inside it.
	The columns are a fixed percentage of the container width.
	*/
		flex: 0 0 percentage($size * 0.01);
	}
}

/* ============== SMALL SCREENS ================== */  

@media only screen and (max-width: 1025px)
{
	#org-title
	{
	font-family: BRAVE Eightyone Regular;
	font-size: 20px;
	}

	#header.content
	{
		// sets background image of header for mobile
		background-image: url('webp/mobile/mblHDR.webp');
		background-size: 100% 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	#main-content
	{
		// sets bckground image for main-content for mobile
		background-image: url('webp/mobile/mblMC.webp');
		background-size: 100% 100%;
		background-position: center;
	}/*

		the footer for mobile devices will probably be different than
		the image i've been using for the desktop footer. it
		will probably be taller.

	 */
}


/* ================ MEDIUM SCREENS ================== */

@media only screen and (min-width: 1026px) and (max-width: 2559px)
{
	// Flex items for medium screens 
	@each $size in $sizes
	{
		.col-md-#{$size}
		{
			flex: 0 0 percentage($size * 0.01);
		}
	}
	
	#org-title
	{
		font-family: BRAVE Eightyone Regular;
		font-size: 24px;
	}

	#header.content
	{
		// sets background image of 1080p header
		background-image: url('webp/1080p/1080HDR.webp');
		background-size: 100% 100%;
		background-position: center;
		background-repeat: no-repeat;
		width: 100%;
		height: 124px;// 11vh
	}
	#main-content
	{
		// sets bckground image for 1080p main-content
		background-image: url('webp/1080p/1080MC.webp');
		background-size: 100% 100%;
		background-position: center;
		height: 913px;// 85vh
	}

	#footer.content
	{
		// sets background image of footer
		background-image: url('webp/1080p/1080FTR.webp');
		background-size: 100% 100%;
		background-position: center;
		background-repeat: no-repeat;
		width: 100%;
		height: 43px;// 4vh
	}
}

@media only screen and (min-width: 2560px)
{
	body
	{
		// this is set for the 'em' units for the boxes
		font-size: 32px;
	}
	
	#org-title
	{
		font-family: BRAVE Eightyone Regular;
		font-size: 48px;
	}	

	// Flex items for large screens
	@each $size in $sizes
	{
		.col-lg-#{$size}
		{
			flex: 0 0 percentage($size * 0.01);
		}
	}

	#header.content
	{
		// sets background image of header
		background-image: url('webp/4K/4kHDR.webp');
		background-size: 100% 100%;
		background-position: center;
		background-repeat: no-repeat;
		width: 100%;
		height: 248px;
	}
	#main-content
	{
		// sets bckground image for everything between header and footer 
		background-image: url('webp/4K/4kMC.webp');
		background-size: 100% 100%;
		background-position: center;
		width: 100%;
		height: 1826px;
	}

	#footer.content
	{
		// sets background image of footer
		background-image: url('webp/4K/4kFTR.webp');
		background-size: 100% 100%;
		background-position: center;
		background-repeat: no-repeat;
		width: 100%;
		height: 86px;
	}
}

/* =============== Boxes / blocks / widgets =============== */
/*
 Currently working on a javascript solution to change
 the background image for the boxes based on device width. Could
 just put the mixins in each media query with different file paths,
 but I don't wanna pollute the css further. 
*/

@mixin box($width, $height, $background-image) {
    background-image: url($background-image);
    background-size: 100% 100%;
    width: $width;
    height: $height;
	box-sizing: border-box;
}
// em is a unit based on font size of the parent container ICYDK
.box-1
{
	@include box(100%, 12.5em, 'webp/1080p/Button 1 1080.webp');
}

.box-2
{
	@include box(100%, 7em, 'webp/1080p/Button 2 1080.webp');
}

.box-3
{
	@include box(100%, 12.5em, 'webp/1080p/Button 3 1080.webp');
}

.box-4
{
	@include box(100%, 5em, 'webp/1080p/Button 4 1080.webp');
}

.box-5
{
	@include box(100%, 12.5em, 'webp/1080p/Button 6 1080.webp');
}

.box-6
{
	@include box(100%, 12.5em, 'webp/1080p/Button 7 1080.webp');
}

.box-7
{
	@include box(100%, 26em, 'webp/1080p/Button 8 1080.webp');
}
